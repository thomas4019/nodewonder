{
    "name": "codemirror",
    "settings_unfiltered": [
        "data"
    ],
    "toHTML": {
        "_is_func": true,
        "args": [
            "label"
        ],
        "javascript": "var element = '<div class=\"mirror\"></div>'\n\nif (this.settings.inline) {\n    return '<div class=\"controls form-inline\">' + (this.settings.label ? label : '') + element + '</div>';\n} else {\n    var isCode = this.settings.lang == 'javascript' || !this.settings.lang;\n    var signature = 'function(' + (this.settings.args ? this.settings.args.join(', ') : '') + ')';\n  return (this.settings.label ? label : '') + (isCode ? signature : '') + element;\n}"
    },
    "deps": {
        "codemirror": [
            "mode/javascript/javascript.js",
            "mode/css/css.js",
            "mode/xml/xml.js",
            "mode/vbscript/vbscript.js",
            "mode/htmlmixed/htmlmixed.js",
            "theme/eclipse.css",
            "theme/neat.css"
        ]
    },
    "head": [],
    "tags": [
        "field_edit",
        "view",
        "action",
        "local-action"
    ],
    "slots": {},
    "processData": {
        "_is_func": true,
        "args": [
            "data",
            "old",
            "user"
        ],
        "javascript": "var data = typeof data == 'string' ? JSON.parse(data) : data;\nif (data && data.htmlmixed) {\n  data.htmlmixed = beautify_js.html(data.htmlmixed);\n}\nreturn data;"
    },
    "wrapper": "div",
    "wrapperClass": "",
    "script": {
        "_is_func": true,
        "args": [],
        "javascript": "return 'nw.functions.processActionResult(\"' + this.id + '\", new ' + this.action + \n  '(nw.functions.fillSettings(' + JSON.stringify(this.settings).replace(/<\\/script/g, '</scr\"+\"ipt') + ', scope, []), ' +\n    '\"' + this.id + '\", scope,' + cms.functions.createHandlersCode(this) + '));';"
    },
    "action": {
        "_is_func": true,
        "args": [
            "settings",
            "id",
            "scope",
            "handlers"
        ],
        "javascript": "var wrapper = document.querySelector('#' + id + ' .mirror');\nvar myCodeMirror = CodeMirror(wrapper, {\n    mode: (settings.lang || \"javascript\"),\n    value: settings.data ? (settings.data[settings.lang || \"javascript\"] || '') : '',\n    lineNumbers: true,\n    theme: 'neat'\n});\n$(wrapper).data('onTabFocus', function() {\n  myCodeMirror.refresh();\n});\n$(wrapper).addClass('onTabFocus');\nnw.mirrors = nw.mirrors || [];\nnw.mirrors.push(myCodeMirror);\nreturn {\n    get: function() {\n        var code = myCodeMirror.getValue();\n        if (!code)\n            return undefined;\n        var obj = {\n            _is_func: true,\n            args: settings.args || []\n        };\n      if (settings.data && settings.data._func_override) {\n        obj._func_override = true;\n      }\n        obj[settings.lang || 'javascript'] = code;\n      return obj;\n    }\n}"
    },
    "style": {
        "_is_func": true,
        "args": [],
        "_func_override": true,
        "javascript": "return {css: this.settings.height ? (this.id + ' .CodeMirror {height: ' + this.settings.height + 'px;} ') : '' +\n  '.CodeMirror {  border: 1px solid #eee;  height: auto;} ' +\n        '.CodeMirror-scroll {  overflow-y: hidden;  overflow-x: auto; }'};"
    },
    "weight": "",
    "settings": {
        "fields": {
            "lang": {
                "type": "Text",
                "quantity": ""
            },
            "height": {
                "type": "Number",
                "quantity": ""
            },
            "data": {
                "type": "Code",
                "quantity": ""
            },
            "args": {
                "type": "Text",
                "quantity": "+"
            }
        },
        "display": {
            "widgets": {
                "lang": {
                    "slots": {},
                    "settings": {
                        "label": "lang",
                        "field_type": "Text"
                    },
                    "field": "lang",
                    "model_type": "Text",
                    "model": "codemirror",
                    "widget": "textbox"
                },
                "height": {
                    "slots": {},
                    "settings": {
                        "label": "height",
                        "field_type": "Number"
                    },
                    "field": "height",
                    "model_type": "Number",
                    "model": "codemirror",
                    "widget": "numeric_textbox"
                },
                "data": {
                    "slots": {},
                    "settings": {
                        "label": "data",
                        "field_type": "Code"
                    },
                    "field": "data",
                    "model_type": "Code",
                    "model": "codemirror",
                    "widget": "codemirror"
                },
                "args": {
                    "slots": {},
                    "settings": {
                        "label": "args",
                        "field_type": "Text"
                    },
                    "field": "args",
                    "model_type": "Text",
                    "model": "codemirror",
                    "widget": "textbox"
                }
            },
            "slotAssignments": {
                "body": [
                    "lang",
                    "height",
                    "data",
                    "args"
                ]
            }
        }
    }
}