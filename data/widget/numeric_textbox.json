{
    "name": "numeric_textbox",
    "settings_unfiltered": [
        "data"
    ],
    "toHTML": {
        "_is_func": true,
        "args": [
            "label"
        ],
        "javascript": "var label = '<label class=\"control-label\" for=\"' + this.id + '-textbox\" style=\"padding-right: 5px;\">' + (this.settings.label ? this.settings.label : '') + ':' + '</label>';\nvar element = '<input id=\"' + this.id + '-textbox\" class=\"form-control input-small\" type=\"number\" name=\"' + this.id + '\"' + (this.settings.data ? ' value=\"' + cms.functions.htmlEscape(this.settings.data) + '\"' : '') + ' />';\n\nif (this.settings.inline) {\n    return '<div class=\"controls form-inline\">' + label + element + '</div>';\n} else {\n    return label + element;\n}"
    },
    "deps": {
        "jquery": [],
        "bootstrap": []
    },
    "head": [],
    "tags": [
        "field_edit",
        "view"
    ],
    "slots": {},
    "processData": {
        "_is_func": true,
        "args": [
            "data",
            "old",
            "user"
        ],
        "javascript": "return isNaN(parseInt(data)) ? data : parseInt(data);"
    },
    "validateData": {
        "_is_func": true,
        "args": [
            "data",
            "callback"
        ],
        "javascript": "/*if (data > 40) {\n  console.log('failing');\n  return 'arbitrary rule';\n}*/\nif (data !== \"\" && typeof data != \"number\")\n  \treturn 'Must be a number';\nif (this.settings.max && data > this.settings.max)\n    return 'Number is too large';\nif (this.settings.min && data < this.settings.min)\n    return 'Number is too small';\nreturn false;"
    },
    "wrapper": "",
    "wrapperClass": "",
    "weight": "",
    "content": {
        "fields": {},
        "display": {
            "widgets": {},
            "slotAssignments": {
                "body": []
            }
        }
    },
    "settings": {
        "fields": {
            "inline": {
                "type": "Boolean",
                "quantity": ""
            },
            "data": {
                "type": "Number",
                "quantity": ""
            },
            "min": {
                "type": "Number",
                "quantity": ""
            },
            "max": {
                "type": "Number",
                "quantity": ""
            }
        },
        "display": {
            "widgets": {
                "inline": {
                    "type": "checkbox",
                    "slots": {},
                    "settings": {
                        "label": "inline",
                        "field_type": "Boolean"
                    },
                    "field": "inline",
                    "model_type": "Boolean",
                    "model": "numeric_textbox"
                },
                "data": {
                    "type": "numeric_textbox",
                    "slots": {},
                    "settings": {
                        "label": "data",
                        "field_type": "Number"
                    },
                    "field": "data",
                    "model_type": "Number",
                    "model": "numeric_textbox"
                },
                "min": {
                    "type": "numeric_textbox",
                    "slots": {},
                    "settings": {
                        "min": 2,
                        "label": "min",
                        "field_type": "Number"
                    },
                    "field": "min",
                    "model_type": "Number",
                    "model": "numeric_textbox"
                },
                "max": {
                    "type": "numeric_textbox",
                    "slots": {},
                    "settings": {
                        "label": "max",
                        "field_type": "Number"
                    },
                    "field": "max",
                    "model_type": "Number",
                    "model": "numeric_textbox"
                }
            },
            "slotAssignments": {
                "body": [
                    "inline",
                    "data",
                    "min",
                    "max"
                ]
            }
        }
    }
}