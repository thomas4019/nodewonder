{
    "tags": [
        "field_edit",
        "view"
    ],
    "deps": {
        "jquery": [],
        "bootstrap": []
    },
    "settingsModel": [
        {
            "name": "inline",
            "type": "Boolean"
        },
        {
            "name": "data",
            "type": "Number"
        },
        {
            "name": "min",
            "type": "Number",
            "settings": {
                "min": 2
            }
        },
        {
            "name": "max",
            "type": "Number"
        }
    ],
    "processData": {
        "_is_func": true,
        "args": [
            "data",
            "old",
            "user"
        ],
        "javascript": "return parseInt(data);"
    },
    "validateData": {
        "_is_func": true,
        "args": [
            "data",
            "callback"
        ],
        "javascript": "if (this.settings.max && data > this.settings.max)\n    return 'Number is too large';\nif (this.settings.min && data < this.settings.min)\n    return 'Number is too small';\nreturn true;"
    },
    "toHTML": {
        "_is_func": true,
        "args": [
            "label"
        ],
        "javascript": "var label = '<label class=\"control-label\" for=\"' + this.id + '-textbox\" style=\"padding-right: 5px;\">' + (this.settings.label ? this.settings.label : '') + ':' + '</label>';\nvar element = '<input id=\"' + this.id + '-textbox\" class=\"form-control input-small\" type=\"number\" name=\"' + this.id + '\"' + (this.settings.data ? ' value=\"' + cms.functions.htmlEscape(this.settings.data) + '\"' : '') + ' />';\n\nif (this.settings.inline) {\n    return '<div class=\"controls form-inline\">' + label + element + '</div>';\n} else {\n    return label + element;\n}"
    },
    "name": "numeric_textbox"
}