{
    "name": "saveRecord",
    "args": [
        "model_name",
        "record_id",
        "value",
        "callback"
    ],
    "code": {
        "_is_func": true,
        "args": [
            "model_name",
            "record_id",
            "value",
            "callback"
        ],
        "javascript": "if (model_name == 'function') {\n    value['code']['args'] = value['args'];\n    cms.functions[record_id] = cms.functions.evalFunctions('function-' + record_id, value).code;\n    var calls = cms.functions.getFuncsCalled(value.code.javascript);\n    var old = value.calls;\n      value.calls = calls;\n  if (!_.isEqual(old, (cms.model_data[model_name][record_id] || {}).calls)) {\n      calls.forEach(function(call) {\n    \tvar called = cms.model_data[model_name][call];\n        if (called && record_id != call) {\n          console.log('---' + record_id);\n          called.callers = called.callers || [];\n          if (!_.contains(called.callers, call)) {\n              called.callers.push(record_id);\n          }\n          //console. log(called);\n          cms.functions.saveRecord(model_name, call, called);\n        }\n      });\n    }\n}\n\nif (!cms.models[model_name].storage || cms.models[model_name].storage == 'disk+memory') {\n    mkdirp('data/' + model_name + '/' + path.dirname(record_id));\n    fs.writeFile('data/' + model_name + '/' + record_id + '.json', JSON.stringify(value, null, 4));\n}\n\nif (model_name == 'widget') {\n    cms.functions.addWidgetType(cms.functions.loadWidget(value));\n    if (cms.widgets[value.name].init)\n    cms.widgets[value.name].init();\n}\n\nif (model_name == 'model') {\n  var old = cms.model_data[model_name][record_id];\n  if (old) {\n    _.each(_.zip(Object.keys(old.schema.fields), Object.keys(value.schema.fields)), function(names) {\n      var oldName = names[0];\n      var newName = names[1];\n      if (newName && oldName && oldName != newName && old.schema.fields[oldName].type == value.schema.fields[newName].type) {\n        console.log(\"model \" + record_id + \": \" + oldName + \" changed to \" + newName);\n        cms.functions.renameField(record_id, oldName, newName);\n      }\n    });\n  }\n}\n\nif (!cms.model_data[model_name])\n    cms.model_data[model_name] = {};\ncms.model_data[model_name][record_id] = value;\nif (callback)\n    callback(undefined, value);"
    },
    "calls": [
        "evalFunctions",
        "getFuncsCalled",
        "saveRecord",
        "addWidgetType",
        "loadWidget",
        "renameField"
    ],
    "callers": [
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField",
        "renameField"
    ]
}