{
    "name": "renameField",
    "args": [
        "modelName",
        "oldField",
        "newField"
    ],
    "code": {
        "_is_func": true,
        "args": [
            "modelName",
            "oldField",
            "newField"
        ],
        "javascript": "_.each(cms.model_data[modelName], function(data, record_name) {\n  data[newField] = data[oldField];\n  delete data[oldField];\n  cms.functions.saveRecord(modelName, record_name, data);\n});\nfunction update(data, path, index) {\n  //console.log(data);\n  if (index == path.length) {\n    data[newField] = data[oldField];\n    delete data[oldField];\n  } else {\n    var next = path[index];\n    if (!data) {\n      console.log('incomplete record: ' + modelName + ' ' + path);\n    } else if (next == '+') {\n      _.each(data, function(subData) {\n        update(subData, path, index + 1);\n      });\n    } else {\n      update(data[next], path, index + 1)\n    }\n  }\n}\nfunction process(fields, model_name, path) {\n  _.each(fields, function(field, name) {\n    if (cms.models[field.type]) {\n      var nPath = _.clone(path);\n      nPath.push(name);\n      var count = (field.quantity.match(/:/g) || []).length + (field.quantity != \"\");\n      for (var i = 0; i < count; i++) {\n        nPath.push('+');\n      }\n      \n      if (field.type == modelName) {\n        console.log('renaming ' + oldField + ' in ' + model_name + ' ' + name);\n        console.log('path: ' + nPath);\n        \n        _.each(cms.model_data[model_name], function(data, id) {\n          update(data, nPath, 0);\n          cms.functions.saveRecord(model_name, id, data);\n        });\n      }\n      \n      process(cms.models[field.type].schema.fields, model_name, nPath);\n    }\n  });\n};\n_.each(cms.models, function(model, model_name) {\n  process(model.schema.fields, model_name, []);\n});"
    },
    "calls": [
        "saveRecord",
        "saveRecord"
    ],
    "callers": []
}